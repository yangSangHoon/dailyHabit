"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("data/observable");
var frameModule = require("ui/frame");
var buttonModule = require("ui/button");
var utils_1 = require("utils/utils");
var Main = (function (_super) {
    __extends(Main, _super);
    function Main(page) {
        var _this = _super.call(this) || this;
        _this.topmost = frameModule.topmost();
        _this.btn1 = page.getViewById('btn1');
        _this.btn2 = page.getViewById('btn2');
        _this.btn3 = page.getViewById('btn3');
        _this.btn4 = page.getViewById('btn4');
        _this.btn5 = page.getViewById('btn5');
        _this.eventSetting();
        return _this;
    }
    Main.prototype.getWidth = function (view) {
        return utils_1.layout.toDeviceIndependentPixels(view.getMeasuredWidth());
    };
    Main.prototype.getHeight = function (view) {
        return utils_1.layout.toDeviceIndependentPixels(view.getMeasuredHeight());
    };
    Main.prototype.removeEvent = function () {
        this.btn1.off(buttonModule.Button.tapEvent);
        this.btn2.off(buttonModule.Button.tapEvent);
        this.btn3.off(buttonModule.Button.tapEvent);
        this.btn4.off(buttonModule.Button.tapEvent);
        this.btn5.off(buttonModule.Button.tapEvent);
    };
    Main.prototype.eventSetting = function () {
        var _this = this;
        this.removeEvent();
        this.btn1.on(buttonModule.Button.tapEvent, function () {
            _this.navigate("component/create/create");
        });
        this.btn2.on(buttonModule.Button.tapEvent, function () {
            _this.navigate("component/dailyCheck/dailyCheck");
        });
        this.btn3.on(buttonModule.Button.tapEvent, function () {
            _this.navigate("component/result/result");
        });
        this.btn4.on(buttonModule.Button.tapEvent, function () {
            _this.navigate("component/profile/profile");
        });
        this.btn5.on(buttonModule.Button.tapEvent, function () {
            _this.navigate("component/groupResult/groupResult");
        });
    };
    Main.prototype.navigate = function (url) {
        this.topmost.navigate(url);
    };
    return Main;
}(observable_1.Observable));
exports.Main = Main;
exports.navigated = function (args) {
    console.log('main');
    new Main(args.object);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw4Q0FBMkM7QUFDM0Msc0NBQXlDO0FBRXpDLHdDQUEyQztBQUMzQyxxQ0FBbUM7QUFHbkM7SUFBMEIsd0JBQVU7SUFZaEMsY0FBWSxJQUFJO1FBQWhCLFlBQ0ksaUJBQU8sU0FPVjtRQWJPLGFBQU8sR0FBRyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7UUFPcEMsS0FBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JDLEtBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQyxLQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckMsS0FBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JDLEtBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQyxLQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7O0lBQ3hCLENBQUM7SUFFTyx1QkFBUSxHQUFoQixVQUFpQixJQUFJO1FBQ2pCLE1BQU0sQ0FBQyxjQUFNLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRU8sd0JBQVMsR0FBakIsVUFBa0IsSUFBSTtRQUNsQixNQUFNLENBQUMsY0FBTSxDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVPLDBCQUFXLEdBQW5CO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFTywyQkFBWSxHQUFwQjtRQUFBLGlCQXFCQztRQXBCRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDdkMsS0FBSSxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1FBQzdDLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDdkMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1FBQ3JELENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDdkMsS0FBSSxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1FBQzdDLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDdkMsS0FBSSxDQUFDLFFBQVEsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1FBQy9DLENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDdkMsS0FBSSxDQUFDLFFBQVEsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO1FBQ3ZELENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLHVCQUFRLEdBQWhCLFVBQWlCLEdBQUc7UUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUNMLFdBQUM7QUFBRCxDQUFDLEFBaEVELENBQTBCLHVCQUFVLEdBZ0VuQztBQWhFWSxvQkFBSTtBQWtFakIsT0FBTyxDQUFDLFNBQVMsR0FBRyxVQUFVLElBQUk7SUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNwQixJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFFMUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPYnNlcnZhYmxlfSBmcm9tICdkYXRhL29ic2VydmFibGUnO1xuaW1wb3J0IGZyYW1lTW9kdWxlID0gcmVxdWlyZShcInVpL2ZyYW1lXCIpO1xuaW1wb3J0IG1vZGVsIGZyb20gJy4uLy4uL21vZGVsL21vZGVsJztcbmltcG9ydCBidXR0b25Nb2R1bGUgPSByZXF1aXJlKFwidWkvYnV0dG9uXCIpO1xuaW1wb3J0IHtsYXlvdXR9IGZyb20gXCJ1dGlscy91dGlsc1wiO1xuaW1wb3J0IHtBYnNvbHV0ZUxheW91dH0gZnJvbSAndWkvbGF5b3V0cy9hYnNvbHV0ZS1sYXlvdXQnO1xuXG5leHBvcnQgY2xhc3MgTWFpbiBleHRlbmRzIE9ic2VydmFibGUge1xuXG4gICAgcHJpdmF0ZSBidG4xO1xuICAgIHByaXZhdGUgYnRuMjtcbiAgICBwcml2YXRlIGJ0bjM7XG4gICAgcHJpdmF0ZSBidG40O1xuICAgIHByaXZhdGUgYnRuNTtcbiAgICBwcml2YXRlIHRvcG1vc3QgPSBmcmFtZU1vZHVsZS50b3Btb3N0KCk7XG5cbiAgICBwcml2YXRlIHN0YWdlV2lkdGg6IG51bWJlcjtcbiAgICBwcml2YXRlIHN0YWdlSGVpZ2h0OiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihwYWdlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuYnRuMSA9IHBhZ2UuZ2V0Vmlld0J5SWQoJ2J0bjEnKTtcbiAgICAgICAgdGhpcy5idG4yID0gcGFnZS5nZXRWaWV3QnlJZCgnYnRuMicpO1xuICAgICAgICB0aGlzLmJ0bjMgPSBwYWdlLmdldFZpZXdCeUlkKCdidG4zJyk7XG4gICAgICAgIHRoaXMuYnRuNCA9IHBhZ2UuZ2V0Vmlld0J5SWQoJ2J0bjQnKTtcbiAgICAgICAgdGhpcy5idG41ID0gcGFnZS5nZXRWaWV3QnlJZCgnYnRuNScpO1xuICAgICAgICB0aGlzLmV2ZW50U2V0dGluZygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0V2lkdGgodmlldyl7XG4gICAgICAgIHJldHVybiBsYXlvdXQudG9EZXZpY2VJbmRlcGVuZGVudFBpeGVscyh2aWV3LmdldE1lYXN1cmVkV2lkdGgoKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRIZWlnaHQodmlldyl7XG4gICAgICAgIHJldHVybiBsYXlvdXQudG9EZXZpY2VJbmRlcGVuZGVudFBpeGVscyh2aWV3LmdldE1lYXN1cmVkSGVpZ2h0KCkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVtb3ZlRXZlbnQoKSB7XG4gICAgICAgIHRoaXMuYnRuMS5vZmYoYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCk7XG4gICAgICAgIHRoaXMuYnRuMi5vZmYoYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCk7XG4gICAgICAgIHRoaXMuYnRuMy5vZmYoYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCk7XG4gICAgICAgIHRoaXMuYnRuNC5vZmYoYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCk7XG4gICAgICAgIHRoaXMuYnRuNS5vZmYoYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBldmVudFNldHRpbmcoKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnQoKTtcbiAgICAgICAgdGhpcy5idG4xLm9uKGJ1dHRvbk1vZHVsZS5CdXR0b24udGFwRXZlbnQsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGUoXCJjb21wb25lbnQvY3JlYXRlL2NyZWF0ZVwiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5idG4yLm9uKGJ1dHRvbk1vZHVsZS5CdXR0b24udGFwRXZlbnQsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGUoXCJjb21wb25lbnQvZGFpbHlDaGVjay9kYWlseUNoZWNrXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmJ0bjMub24oYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0ZShcImNvbXBvbmVudC9yZXN1bHQvcmVzdWx0XCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmJ0bjQub24oYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0ZShcImNvbXBvbmVudC9wcm9maWxlL3Byb2ZpbGVcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuYnRuNS5vbihidXR0b25Nb2R1bGUuQnV0dG9uLnRhcEV2ZW50LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRlKFwiY29tcG9uZW50L2dyb3VwUmVzdWx0L2dyb3VwUmVzdWx0XCIpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG5hdmlnYXRlKHVybCkge1xuICAgICAgICB0aGlzLnRvcG1vc3QubmF2aWdhdGUodXJsKTtcbiAgICB9XG59XG5cbmV4cG9ydHMubmF2aWdhdGVkID0gZnVuY3Rpb24gKGFyZ3MpIHtcbiAgICBjb25zb2xlLmxvZygnbWFpbicpO1xuICAgIG5ldyBNYWluKGFyZ3Mub2JqZWN0KTtcblxufTsiXX0=