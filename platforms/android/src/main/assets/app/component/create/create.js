"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = require("../../model/model");
var buttonModule = require("ui/button");
var firebase = require("nativescript-plugin-firebase");
var builder = require('ui/builder');
var Create = (function () {
    function Create(page) {
        this.btnSubmit = page.getViewById('btnSubmit');
        this.btnAdd = page.getViewById('btnAdd');
        this.habitContainer = page.getViewById('habitContainer');
        this.btnLogout = page.getViewById('btnLogout');
        this.makeMyHabits();
        this.eventSetting();
    }
    Create.prototype.makeMyHabits = function () {
        var _this = this;
        this.habitContainer.removeChildren();
        var myHabits = model_1.default.userInfo.myHabits;
        if (!myHabits || myHabits.length == 0) {
            this.addHabit();
        }
        else {
            myHabits.forEach(function (habit) {
                _this.addHabit(habit);
            });
        }
    };
    Create.prototype.addHabit = function (habitDbData) {
        if (habitDbData === void 0) { habitDbData = null; }
        var habit = builder.load({
            path: '/component/create/habit',
            name: 'habit'
        });
        this.habitContainer.addChild(habit);
        if (habitDbData) {
            habit.getViewById('habitName').text = habitDbData.title;
            habit.getViewById('habitCount').text = habitDbData.value;
        }
    };
    Create.prototype.eventSetting = function () {
        var _this = this;
        this.btnSubmit.on(buttonModule.Button.tapEvent, function () {
            _this.goSubmit();
        });
        this.btnLogout.on(buttonModule.Button.tapEvent, function () {
            _this.logout();
        });
        this.btnAdd.on(buttonModule.Button.tapEvent, function () {
            _this.addHabit();
        });
    };
    Create.prototype.goSubmit = function () {
        var habits = [];
        this.habitContainer.eachChildView(function (child) {
            habits.push({
                title: child.getViewById('habitName').text,
                value: Number(child.getViewById('habitCount').text)
            });
        });
        model_1.default.userInfo.createHabits({ habits: habits });
    };
    Create.prototype.logout = function () {
        firebase.logout();
    };
    return Create;
}());
exports.navigated = function (args) {
    new Create(args.object);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQXNDO0FBQ3RDLHdDQUEyQztBQUMzQyxJQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsOEJBQThCLENBQUMsQ0FBQztBQUN6RCxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFFdEM7SUFPSSxnQkFBWSxJQUFJO1FBQ1osSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFL0MsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU8sNkJBQVksR0FBcEI7UUFBQSxpQkFVQztRQVRHLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDckMsSUFBTSxRQUFRLEdBQUcsZUFBSyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUM7UUFDekMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNwQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixRQUFRLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSztnQkFDbEIsS0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN6QixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7SUFDTCxDQUFDO0lBRU8seUJBQVEsR0FBaEIsVUFBaUIsV0FBa0I7UUFBbEIsNEJBQUEsRUFBQSxrQkFBa0I7UUFDL0IsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztZQUN2QixJQUFJLEVBQUUseUJBQXlCO1lBQy9CLElBQUksRUFBRSxPQUFPO1NBQ2hCLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRXBDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDZCxLQUFLLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDO1lBQ3hELEtBQUssQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUM7UUFDN0QsQ0FBQztJQUNMLENBQUM7SUFFTyw2QkFBWSxHQUFwQjtRQUFBLGlCQVVDO1FBVEcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDNUMsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDNUMsS0FBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2xCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDekMsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLHlCQUFRLEdBQWY7UUFFSSxJQUFJLE1BQU0sR0FBa0IsRUFBRSxDQUFDO1FBQy9CLElBQUksQ0FBQyxjQUFjLENBQUMsYUFBYSxDQUFDLFVBQUEsS0FBSztZQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUNSLEtBQUssRUFBRSxLQUFLLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUk7Z0JBQzFDLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUM7YUFDdEQsQ0FBQyxDQUFDO1FBQ1AsQ0FBQyxDQUFDLENBQUM7UUFFSCxlQUFLLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxFQUFDLE1BQU0sUUFBQSxFQUFDLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRU0sdUJBQU0sR0FBYjtRQUNJLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBR0wsYUFBQztBQUFELENBQUMsQUF6RUQsSUF5RUM7QUFFRCxPQUFPLENBQUMsU0FBUyxHQUFHLFVBQVUsSUFBSTtJQUM5QixJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDNUIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZGVsIGZyb20gJy4uLy4uL21vZGVsL21vZGVsJztcbmltcG9ydCBidXR0b25Nb2R1bGUgPSByZXF1aXJlKFwidWkvYnV0dG9uXCIpO1xuY29uc3QgZmlyZWJhc2UgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LXBsdWdpbi1maXJlYmFzZVwiKTtcbmNvbnN0IGJ1aWxkZXIgPSByZXF1aXJlKCd1aS9idWlsZGVyJyk7XG5cbmNsYXNzIENyZWF0ZSB7XG5cbiAgICBwcml2YXRlIGJ0blN1Ym1pdDtcbiAgICBwcml2YXRlIGJ0bkxvZ291dDtcbiAgICBwcml2YXRlIGhhYml0Q29udGFpbmVyO1xuICAgIHByaXZhdGUgYnRuQWRkO1xuXG4gICAgY29uc3RydWN0b3IocGFnZSkge1xuICAgICAgICB0aGlzLmJ0blN1Ym1pdCA9IHBhZ2UuZ2V0Vmlld0J5SWQoJ2J0blN1Ym1pdCcpO1xuICAgICAgICB0aGlzLmJ0bkFkZCA9IHBhZ2UuZ2V0Vmlld0J5SWQoJ2J0bkFkZCcpO1xuICAgICAgICB0aGlzLmhhYml0Q29udGFpbmVyID0gcGFnZS5nZXRWaWV3QnlJZCgnaGFiaXRDb250YWluZXInKTtcbiAgICAgICAgdGhpcy5idG5Mb2dvdXQgPSBwYWdlLmdldFZpZXdCeUlkKCdidG5Mb2dvdXQnKTtcblxuICAgICAgICB0aGlzLm1ha2VNeUhhYml0cygpO1xuICAgICAgICB0aGlzLmV2ZW50U2V0dGluZygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgbWFrZU15SGFiaXRzKCkge1xuICAgICAgICB0aGlzLmhhYml0Q29udGFpbmVyLnJlbW92ZUNoaWxkcmVuKCk7XG4gICAgICAgIGNvbnN0IG15SGFiaXRzID0gbW9kZWwudXNlckluZm8ubXlIYWJpdHM7XG4gICAgICAgIGlmICghbXlIYWJpdHMgfHwgbXlIYWJpdHMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgIHRoaXMuYWRkSGFiaXQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG15SGFiaXRzLmZvckVhY2goaGFiaXQgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkSGFiaXQoaGFiaXQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGFkZEhhYml0KGhhYml0RGJEYXRhID0gbnVsbCkge1xuICAgICAgICBjb25zdCBoYWJpdCA9IGJ1aWxkZXIubG9hZCh7XG4gICAgICAgICAgICBwYXRoOiAnL2NvbXBvbmVudC9jcmVhdGUvaGFiaXQnLFxuICAgICAgICAgICAgbmFtZTogJ2hhYml0J1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmhhYml0Q29udGFpbmVyLmFkZENoaWxkKGhhYml0KTtcblxuICAgICAgICBpZiAoaGFiaXREYkRhdGEpIHtcbiAgICAgICAgICAgIGhhYml0LmdldFZpZXdCeUlkKCdoYWJpdE5hbWUnKS50ZXh0ID0gaGFiaXREYkRhdGEudGl0bGU7XG4gICAgICAgICAgICBoYWJpdC5nZXRWaWV3QnlJZCgnaGFiaXRDb3VudCcpLnRleHQgPSBoYWJpdERiRGF0YS52YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgZXZlbnRTZXR0aW5nKCkge1xuICAgICAgICB0aGlzLmJ0blN1Ym1pdC5vbihidXR0b25Nb2R1bGUuQnV0dG9uLnRhcEV2ZW50LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmdvU3VibWl0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmJ0bkxvZ291dC5vbihidXR0b25Nb2R1bGUuQnV0dG9uLnRhcEV2ZW50LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmxvZ291dCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5idG5BZGQub24oYnV0dG9uTW9kdWxlLkJ1dHRvbi50YXBFdmVudCwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5hZGRIYWJpdCgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ29TdWJtaXQoKSB7XG5cbiAgICAgICAgbGV0IGhhYml0czogQXJyYXk8T2JqZWN0PiA9IFtdO1xuICAgICAgICB0aGlzLmhhYml0Q29udGFpbmVyLmVhY2hDaGlsZFZpZXcoY2hpbGQgPT4ge1xuICAgICAgICAgICAgaGFiaXRzLnB1c2goe1xuICAgICAgICAgICAgICAgIHRpdGxlOiBjaGlsZC5nZXRWaWV3QnlJZCgnaGFiaXROYW1lJykudGV4dCxcbiAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKGNoaWxkLmdldFZpZXdCeUlkKCdoYWJpdENvdW50JykudGV4dClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBtb2RlbC51c2VySW5mby5jcmVhdGVIYWJpdHMoe2hhYml0c30pO1xuICAgIH1cblxuICAgIHB1YmxpYyBsb2dvdXQoKSB7XG4gICAgICAgIGZpcmViYXNlLmxvZ291dCgpO1xuICAgIH1cblxuXG59XG5cbmV4cG9ydHMubmF2aWdhdGVkID0gZnVuY3Rpb24gKGFyZ3MpIHtcbiAgICBuZXcgQ3JlYXRlKGFyZ3Mub2JqZWN0KTtcbn07Il19