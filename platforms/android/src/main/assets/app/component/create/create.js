"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var model_1 = require("../../model/model");
var buttonModule = require("ui/button");
var firebase = require("nativescript-plugin-firebase");
var builder = require('ui/builder');
var Create = (function () {
    function Create(page) {
        this.btnSubmit = page.getViewById('btnSubmit');
        this.btnAdd = page.getViewById('btnAdd');
        this.habitContainer = page.getViewById('habitContainer');
        this.btnLogout = page.getViewById('btnLogout');
        this.makeMyHabits(model_1.default.userInfo.myHabits);
        this.eventSetting();
    }
    Create.prototype.addHabit = function (habitDbData) {
        if (habitDbData === void 0) { habitDbData = null; }
        var habit = builder.load({
            path: '/component/create/habit',
            name: 'habit'
        });
        if (habitDbData) {
            habit.getViewById('habitName').text = habitDbData.title;
            habit.getViewById('habitCount').text = habitDbData.value;
        }
        this.habitContainer.addChild(habit);
    };
    Create.prototype.eventSetting = function () {
        var _this = this;
        this.btnSubmit.on(buttonModule.Button.tapEvent, function () {
            _this.goSubmit();
        });
        this.btnLogout.on(buttonModule.Button.tapEvent, function () {
            _this.logout();
        });
        this.btnAdd.on(buttonModule.Button.tapEvent, function () {
            _this.addHabit();
        });
    };
    Create.prototype.makeMyHabits = function (myHabits) {
        var _this = this;
        if (!myHabits || myHabits.length == 0) {
            this.addHabit();
        }
        else {
            myHabits.forEach(function (habit) {
                _this.addHabit(habit);
            });
        }
    };
    Create.prototype.goSubmit = function () {
        var habits = [];
        this.habitContainer.eachChildView(function (child) {
            habits.push({
                title: child.getViewById('habitName').text,
                value: Number(child.getViewById('habitCount').text)
            });
        });
        model_1.default.userInfo.createHabits({ habits: habits });
    };
    Create.prototype.logout = function () {
        firebase.logout();
    };
    return Create;
}());
exports.navigated = function (args) {
    new Create(args.object);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkNBQXNDO0FBQ3RDLHdDQUEyQztBQUMzQyxJQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsOEJBQThCLENBQUMsQ0FBQztBQUN6RCxJQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFFdEM7SUFPSSxnQkFBWSxJQUFJO1FBQ1osSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFL0MsSUFBSSxDQUFDLFlBQVksQ0FBQyxlQUFLLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRU8seUJBQVEsR0FBaEIsVUFBaUIsV0FBa0I7UUFBbEIsNEJBQUEsRUFBQSxrQkFBa0I7UUFDL0IsSUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztZQUN2QixJQUFJLEVBQUUseUJBQXlCO1lBQy9CLElBQUksRUFBRSxPQUFPO1NBQ2hCLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDZCxLQUFLLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDO1lBQ3hELEtBQUssQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQyxLQUFLLENBQUM7UUFDN0QsQ0FBQztRQUVELElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTyw2QkFBWSxHQUFwQjtRQUFBLGlCQVVDO1FBVEcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDNUMsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDNUMsS0FBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2xCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDekMsS0FBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLDZCQUFZLEdBQXBCLFVBQXFCLFFBQVE7UUFBN0IsaUJBUUM7UUFQRyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDcEMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLO2dCQUNsQixLQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztJQUNMLENBQUM7SUFFTSx5QkFBUSxHQUFmO1FBRUksSUFBSSxNQUFNLEdBQWtCLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsQ0FBQyxVQUFBLEtBQUs7WUFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQztnQkFDUixLQUFLLEVBQUUsS0FBSyxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJO2dCQUMxQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxDQUFDO2FBQ3RELENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO1FBRUgsZUFBSyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsRUFBQyxNQUFNLFFBQUEsRUFBQyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVNLHVCQUFNLEdBQWI7UUFDSSxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUdMLGFBQUM7QUFBRCxDQUFDLEFBdkVELElBdUVDO0FBRUQsT0FBTyxDQUFDLFNBQVMsR0FBRyxVQUFVLElBQUk7SUFDOUIsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzVCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2RlbCBmcm9tICcuLi8uLi9tb2RlbC9tb2RlbCc7XG5pbXBvcnQgYnV0dG9uTW9kdWxlID0gcmVxdWlyZShcInVpL2J1dHRvblwiKTtcbmNvbnN0IGZpcmViYXNlID0gcmVxdWlyZShcIm5hdGl2ZXNjcmlwdC1wbHVnaW4tZmlyZWJhc2VcIik7XG5jb25zdCBidWlsZGVyID0gcmVxdWlyZSgndWkvYnVpbGRlcicpO1xuXG5jbGFzcyBDcmVhdGUge1xuXG4gICAgcHJpdmF0ZSBidG5TdWJtaXQ7XG4gICAgcHJpdmF0ZSBidG5Mb2dvdXQ7XG4gICAgcHJpdmF0ZSBoYWJpdENvbnRhaW5lcjtcbiAgICBwcml2YXRlIGJ0bkFkZDtcblxuICAgIGNvbnN0cnVjdG9yKHBhZ2UpIHtcbiAgICAgICAgdGhpcy5idG5TdWJtaXQgPSBwYWdlLmdldFZpZXdCeUlkKCdidG5TdWJtaXQnKTtcbiAgICAgICAgdGhpcy5idG5BZGQgPSBwYWdlLmdldFZpZXdCeUlkKCdidG5BZGQnKTtcbiAgICAgICAgdGhpcy5oYWJpdENvbnRhaW5lciA9IHBhZ2UuZ2V0Vmlld0J5SWQoJ2hhYml0Q29udGFpbmVyJyk7XG4gICAgICAgIHRoaXMuYnRuTG9nb3V0ID0gcGFnZS5nZXRWaWV3QnlJZCgnYnRuTG9nb3V0Jyk7XG5cbiAgICAgICAgdGhpcy5tYWtlTXlIYWJpdHMobW9kZWwudXNlckluZm8ubXlIYWJpdHMpO1xuICAgICAgICB0aGlzLmV2ZW50U2V0dGluZygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgYWRkSGFiaXQoaGFiaXREYkRhdGEgPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IGhhYml0ID0gYnVpbGRlci5sb2FkKHtcbiAgICAgICAgICAgIHBhdGg6ICcvY29tcG9uZW50L2NyZWF0ZS9oYWJpdCcsXG4gICAgICAgICAgICBuYW1lOiAnaGFiaXQnXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChoYWJpdERiRGF0YSkge1xuICAgICAgICAgICAgaGFiaXQuZ2V0Vmlld0J5SWQoJ2hhYml0TmFtZScpLnRleHQgPSBoYWJpdERiRGF0YS50aXRsZTtcbiAgICAgICAgICAgIGhhYml0LmdldFZpZXdCeUlkKCdoYWJpdENvdW50JykudGV4dCA9IGhhYml0RGJEYXRhLnZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5oYWJpdENvbnRhaW5lci5hZGRDaGlsZChoYWJpdCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBldmVudFNldHRpbmcoKSB7XG4gICAgICAgIHRoaXMuYnRuU3VibWl0Lm9uKGJ1dHRvbk1vZHVsZS5CdXR0b24udGFwRXZlbnQsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZ29TdWJtaXQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYnRuTG9nb3V0Lm9uKGJ1dHRvbk1vZHVsZS5CdXR0b24udGFwRXZlbnQsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubG9nb3V0KCk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmJ0bkFkZC5vbihidXR0b25Nb2R1bGUuQnV0dG9uLnRhcEV2ZW50LCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmFkZEhhYml0KCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgbWFrZU15SGFiaXRzKG15SGFiaXRzKSB7XG4gICAgICAgIGlmICghbXlIYWJpdHMgfHwgbXlIYWJpdHMubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgIHRoaXMuYWRkSGFiaXQoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG15SGFiaXRzLmZvckVhY2goaGFiaXQgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkSGFiaXQoaGFiaXQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgZ29TdWJtaXQoKSB7XG5cbiAgICAgICAgbGV0IGhhYml0czogQXJyYXk8T2JqZWN0PiA9IFtdO1xuICAgICAgICB0aGlzLmhhYml0Q29udGFpbmVyLmVhY2hDaGlsZFZpZXcoY2hpbGQgPT4ge1xuICAgICAgICAgICAgaGFiaXRzLnB1c2goe1xuICAgICAgICAgICAgICAgIHRpdGxlOiBjaGlsZC5nZXRWaWV3QnlJZCgnaGFiaXROYW1lJykudGV4dCxcbiAgICAgICAgICAgICAgICB2YWx1ZTogTnVtYmVyKGNoaWxkLmdldFZpZXdCeUlkKCdoYWJpdENvdW50JykudGV4dClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBtb2RlbC51c2VySW5mby5jcmVhdGVIYWJpdHMoe2hhYml0c30pO1xuICAgIH1cblxuICAgIHB1YmxpYyBsb2dvdXQoKSB7XG4gICAgICAgIGZpcmViYXNlLmxvZ291dCgpO1xuICAgIH1cblxuXG59XG5cbmV4cG9ydHMubmF2aWdhdGVkID0gZnVuY3Rpb24gKGFyZ3MpIHtcbiAgICBuZXcgQ3JlYXRlKGFyZ3Mub2JqZWN0KTtcbn07Il19